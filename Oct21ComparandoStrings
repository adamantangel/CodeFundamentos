public class ArreglosString {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        
        /**
 *
 * @author pena1 con matricula 2193013457 (ft. 2133042914)
 * Este programa tiene el objetivo de revisar strings y saber si están ordenados o no
 */

        //String[] palabras;
        String[] palabras={"Perro","llanta","carro"};
        int tamaño;
        //El orden debe ser Perro, carro, llanta
        
        
        System.out.println("Iniciando programa");
        
        //Queremos revisar que sea ascendente
        
        //Resivimos tamaño y palabras
        tamaño=Integer.parseInt(JOptionPane.showInputDialog("Ingrese el tamaño del arreglo"));
          
          /*System.out.println(palabras[0]);
          palabras[0]= "Perrote";
          System.out.println(palabras[0]);
          */
          //palabras[0]= JOptionPane.showInputDialog("Ingresa la palabra");
          //System.out.println(palabras[0]);
        
        for(int i=0; i<tamaño;i++){
            String aux=JOptionPane.showInputDialog("Ingresa la palabra para el indice"+i);
            //asign palabras[i] = aux;
            
            }
            
        //Revisamos si es ascendente, si no los es revisamos si es descendente, si no lo es declaramos que está desordenada la lista de palabras.
        if(pandemia_sube(palabras)){
            System.out.println("La lista de palabras es ascendente");
        }
        else{
            if(pandemia_nosube(palabras)){
                System.out.println("La lista de palabras es descendente");
            }else{
                System.out.println("La lista está desordenada");
            }
            
        }

    }
    
    //Funciones booleanas que regresan verdadero o falsa dependiendo si es ascendente o no; si es descendente o no.
    public static boolean pandemia_sube(String Lista[]){ //revisa ascendencia
        boolean Federer= true;
        for(int i=0;i<Lista.length-1;i++){
           if(Lista[i].compareTo(Lista[i+1]) <= 0) { //Si se encuenttra un caso de descendencia, no es ascendente
               return !Federer;
           }
        }
        return Federer;
}
    
    public static boolean pandemia_nosube(String Lista[]){ //revisa descendencia
        boolean Mayweather=true;
        for (int i=0; i<Lista.length-1; i++){
            if(Lista[i].compareTo(Lista[i+1]) >= 0){
                return !Mayweather;
            }
        }
        return Mayweather;
    }

    private static String Assign(String palabra) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}//fin de clase
